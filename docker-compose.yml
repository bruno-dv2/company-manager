version: '3.9'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    expose:
      - "3001"
    environment:
      - DATABASE_URL=postgresql://postgres:1234@postgres:5432/postgres?schema=public
      - JWT_SECRET=dajbcdo@18djjutencdcdpoyvs520s
      - PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
    
  frontend:
    build: ./frontend
    expose:
      - "5173"
    environment:
      - REACT_APP_API_URL=/api
    depends_on:
      - backend
    networks:
      - app-network
    restart: always
    
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
    
volumes:
  postgres_data: